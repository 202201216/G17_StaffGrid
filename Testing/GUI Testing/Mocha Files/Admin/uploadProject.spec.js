// Generated by Selenium IDE
const { Builder, By, Key, until } = require('selenium-webdriver')
const assert = require('assert')

describe('Upload Project', function() {
  this.timeout(30000)
  let driver
  let vars
  beforeEach(async function() {
    driver = await new Builder().forBrowser('chrome').usingServer('http://localhost:4444/wd/hub').build()
    vars = {}
  })
  afterEach(async function() {
    await driver.quit();
  })
  it('Upload Project', async function() {
    // Test name: Upload Project
    // Step # | name | target | value
    // 1 | open | https://staff-grid.vercel.app/api/login | 
    await driver.get("https://staff-grid.vercel.app/api/login")
    // 2 | setWindowSize | 1552x832 | 
    await driver.manage().window().setRect(1552, 832)
    // 3 | click | id=id | 
    await driver.findElement(By.id("id")).click()
    // 4 | type | id=id | 2024000001
    await driver.findElement(By.id("id")).sendKeys("2024000001")
    // 5 | click | id=password | 
    await driver.findElement(By.id("password")).click()
    // 6 | type | id=password | R123456
    await driver.findElement(By.id("password")).sendKeys("R123456")
    // 7 | click | css=.login-btn | 
    await driver.findElement(By.css(".login-btn")).click()
    // 8 | click | css=.hamburger | 
    await driver.findElement(By.css(".hamburger")).click()
    // 9 | click | linkText=Upload Project | 
    await driver.findElement(By.linkText("Upload Project")).click()
    // 10 | click | css=.close | 
    await driver.findElement(By.css(".close")).click()
    // 11 | click | id=title | 
    await driver.findElement(By.id("title")).click()
    // 12 | type | id=title | EMS
    await driver.findElement(By.id("title")).sendKeys("EMS")
    // 13 | click | id=description | 
    await driver.findElement(By.id("description")).click()
    // 14 | type | id=description | create a Employee Management System for TCS
    await driver.findElement(By.id("description")).sendKeys("create a Employee Management System for TCS")
    // 15 | click | css=.form-group1:nth-child(3) > button | 
    await driver.findElement(By.css(".form-group1:nth-child(3) > button")).click()
    // 16 | type | name=teamMembers.0.id | 2022030001
    await driver.findElement(By.name("teamMembers.0.id")).sendKeys("2022030001")
    // 17 | click | css=.form-group1:nth-child(3) > button | 
    await driver.findElement(By.css(".form-group1:nth-child(3) > button")).click()
    // 18 | click | name=teamMembers.1.id | 
    await driver.findElement(By.name("teamMembers.1.id")).click()
    // 19 | click | name=teamMembers.1.id | 
    await driver.findElement(By.name("teamMembers.1.id")).click()
    // 20 | type | name=teamMembers.1.id | 2024020001
    await driver.findElement(By.name("teamMembers.1.id")).sendKeys("2024020001")
    // 21 | click | css=button:nth-child(4) | 
    await driver.findElement(By.css("button:nth-child(4)")).click()
    // 22 | click | name=teamMembers.2.id | 
    await driver.findElement(By.name("teamMembers.2.id")).click()
    // 23 | click | name=teamMembers.2.id | 
    await driver.findElement(By.name("teamMembers.2.id")).click()
    // 24 | type | name=teamMembers.2.id | 2024030002
    await driver.findElement(By.name("teamMembers.2.id")).sendKeys("2024030002")
    // 25 | click | css=button:nth-child(2) | 
    await driver.findElement(By.css("button:nth-child(2)")).click()
    // 26 | click | name=tasks.0.taskTitle | 
    await driver.findElement(By.name("tasks.0.taskTitle")).click()
    // 27 | type | name=tasks.0.taskTitle | TESTING
    await driver.findElement(By.name("tasks.0.taskTitle")).sendKeys("TESTING")
    // 28 | type | name=tasks.0.taskDescription | Login
    await driver.findElement(By.name("tasks.0.taskDescription")).sendKeys("Login")
    // 29 | click | name=tasks.0.assignedTo.id | 
    await driver.findElement(By.name("tasks.0.assignedTo.id")).click()
    // 30 | type | name=tasks.0.assignedTo.id | 1
    await driver.findElement(By.name("tasks.0.assignedTo.id")).sendKeys("1")
    // 31 | click | name=tasks.0.dueDate | 
    await driver.findElement(By.name("tasks.0.dueDate")).click()
    // 32 | click | name=tasks.0.assignedTo.id | 
    await driver.findElement(By.name("tasks.0.assignedTo.id")).click()
    // 33 | click | name=tasks.0.dueDate | 
    await driver.findElement(By.name("tasks.0.dueDate")).click()
    // 34 | type | name=tasks.0.dueDate | 2024-12-14
    await driver.findElement(By.name("tasks.0.dueDate")).sendKeys("2024-12-14")
    // 35 | click | name=tasks.0.status | 
    await driver.findElement(By.name("tasks.0.status")).click()
    // 36 | select | name=tasks.0.status | label=In Progress
    {
      const dropdown = await driver.findElement(By.name("tasks.0.status"))
      await dropdown.findElement(By.xpath("//option[. = 'In Progress']")).click()
    }
    // 37 | click | id=startDate | 
    await driver.findElement(By.id("startDate")).click()
    // 38 | type | id=startDate | 2024-12-02
    await driver.findElement(By.id("startDate")).sendKeys("2024-12-02")
    // 39 | click | id=endDate | 
    await driver.findElement(By.id("endDate")).click()
    // 40 | type | id=endDate | 2024-12-31
    await driver.findElement(By.id("endDate")).sendKeys("2024-12-31")
    // 41 | click | css=.btn | 
    await driver.findElement(By.css(".btn")).click()
  })
})
