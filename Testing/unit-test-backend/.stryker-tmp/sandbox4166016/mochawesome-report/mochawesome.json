{
  "stats": {
    "suites": 7,
    "tests": 48,
    "passes": 31,
    "pending": 0,
    "failures": 17,
    "start": "2024-11-30T16:09:40.643Z",
    "end": "2024-11-30T16:09:43.383Z",
    "duration": 2740,
    "testsRegistered": 48,
    "passPercent": 64.58333333333334,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "b0c2934a-3208-49c0-8a98-dfdfa046d5ab",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "dd227978-8284-4b8d-a37a-c233d4a1252d",
          "title": "Admin Routes",
          "fullFile": "F:\\SE7\\G17_StaffGrid\\testing-documents\\unit-test-backend\\test\\admin_unit_test.spec.js",
          "file": "\\test\\admin_unit_test.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "[Admin] Login ",
              "fullTitle": "Admin Routes [Admin] Login ",
              "timedOut": false,
              "duration": 282,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request.execute(baseUrl)\n  .post('/api/login')\n  .send({ id: '2024000001', pass: 'R123456' })\n  .end((err, res) => {\n    if (err) {\n      return done(err);\n    }\n    authTokenAdmin = res.body.token;\n    done();\n  });",
              "err": {},
              "uuid": "0a787f66-1b99-4ff8-ad28-d8c345bd44d5",
              "parentUUID": "dd227978-8284-4b8d-a37a-c233d4a1252d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "[Admin] should retrieve all employee details with profiles",
              "fullTitle": "Admin Routes [Admin] should retrieve all employee details with profiles",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "if (!authTokenAdmin) {\n  return done(new Error('Auth token is missing. Admin login test may have failed.'));\n}\nrequest.execute(baseUrl)\n  .get('/api/login/viewAllemployee')\n  .set('cookie', `jwt=${authTokenAdmin}`)\n  .end((err, res) => {\n    if (err) {\n      return done(err);\n    }\n    // console.log(res)\n    done();\n  });",
              "err": {
                "message": "Error: Auth token is missing. Admin login test may have failed.",
                "estack": "Error: Auth token is missing. Admin login test may have failed.\n    at Context.<anonymous> (file:///F:/SE7/G17_StaffGrid/testing-documents/unit-test-backend/test/admin_unit_test.spec.js:26:19)\n    at process.processImmediate (node:internal/timers:476:21)",
                "diff": null
              },
              "uuid": "e32b2836-782b-4b2b-9c30-c0f79d1d4599",
              "parentUUID": "dd227978-8284-4b8d-a37a-c233d4a1252d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "[Admin] should delete an employee and all associated data successfully",
              "fullTitle": "Admin Routes [Admin] should delete an employee and all associated data successfully",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "if (!authTokenAdmin) {\n  return done(new Error('Auth token is missing. Admin login test may have failed.'));\n}\nrequest.execute(baseUrl)\n  .delete(`/api/login/delete/${testEmployeeId}`)\n  .set('cookie', `jwt=${authTokenAdmin}`)\n  .end((err, res) => {\n    if (res._body.message=='Employee not found') {\n        return done(res._body.message);\n      }\n    //console.log(res)\n    done();\n  });",
              "err": {
                "message": "Error: Auth token is missing. Admin login test may have failed.",
                "estack": "Error: Auth token is missing. Admin login test may have failed.\n    at Context.<anonymous> (file:///F:/SE7/G17_StaffGrid/testing-documents/unit-test-backend/test/admin_unit_test.spec.js:43:19)\n    at process.processImmediate (node:internal/timers:476:21)",
                "diff": null
              },
              "uuid": "671466c9-5ad7-4c62-818d-635b535581c1",
              "parentUUID": "dd227978-8284-4b8d-a37a-c233d4a1252d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "[Admin] should return an error if employee to delete is not found",
              "fullTitle": "Admin Routes [Admin] should return an error if employee to delete is not found",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "if (!authTokenAdmin) {\n  return done(new Error('Auth token is missing. Admin login test may have failed.'));\n}\nconst nonExistentEmployeeId = '9999999999';  \nrequest.execute(baseUrl)\n  .delete(`/api/login/delete/${nonExistentEmployeeId}`)\n  .set('cookie', `jwt=${authTokenAdmin}`)\n  .end((err, res) => {\n    if (res._body.message=='Employee not found') {\n      return done(res._body.message);\n    }\n    // console.log(res)\n    done();\n  });",
              "err": {
                "message": "Error: Auth token is missing. Admin login test may have failed.",
                "estack": "Error: Auth token is missing. Admin login test may have failed.\n    at Context.<anonymous> (file:///F:/SE7/G17_StaffGrid/testing-documents/unit-test-backend/test/admin_unit_test.spec.js:60:19)\n    at process.processImmediate (node:internal/timers:476:21)",
                "diff": null
              },
              "uuid": "ffd9d40d-65ab-4694-8b3b-2c33c9fcec17",
              "parentUUID": "dd227978-8284-4b8d-a37a-c233d4a1252d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0a787f66-1b99-4ff8-ad28-d8c345bd44d5"
          ],
          "failures": [
            "e32b2836-782b-4b2b-9c30-c0f79d1d4599",
            "671466c9-5ad7-4c62-818d-635b535581c1",
            "ffd9d40d-65ab-4694-8b3b-2c33c9fcec17"
          ],
          "pending": [],
          "skipped": [],
          "duration": 282,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "e6d4b5bd-da91-4db3-8d43-d5c36349bde0",
          "title": "Announcement API Tests",
          "fullFile": "F:\\SE7\\G17_StaffGrid\\testing-documents\\unit-test-backend\\test\\announcement_unit_test.spec.js",
          "file": "\\test\\announcement_unit_test.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "[Admin] should log in successfully and get auth token",
              "fullTitle": "Announcement API Tests [Admin] should log in successfully and get auth token",
              "timedOut": false,
              "duration": 61,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request.execute(baseUrl)\n  .post('/api/login')\n  .send({ id: '2024000001', pass: 'R123456' })\n  .end((err, res) => {\n    if (err) return done(err);\n    authTokenAdmin = res.body.token;\n    done();\n  });",
              "err": {},
              "uuid": "fcc26fc6-fd1b-420b-b39a-d1191a708cd7",
              "parentUUID": "e6d4b5bd-da91-4db3-8d43-d5c36349bde0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "[Employee] should log in successfully and get auth token",
              "fullTitle": "Announcement API Tests [Employee] should log in successfully and get auth token",
              "timedOut": false,
              "duration": 71,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request.execute(baseUrl)\n  .post('/api/login')\n  .send({ id: '2024030001', pass: 'R123456' })\n  .end((err, res) => {\n    if (err) return done(err);\n    authTokenEmployee = res.body.token;\n    done();\n  });",
              "err": {},
              "uuid": "228b1bfc-f543-4d76-b4ef-38cffd70ee3f",
              "parentUUID": "e6d4b5bd-da91-4db3-8d43-d5c36349bde0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "[Employee] should view announcements addressed to them",
              "fullTitle": "Announcement API Tests [Employee] should view announcements addressed to them",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "if (!authTokenEmployee) return done(new Error('Auth token is missing.'));\nrequest.execute(baseUrl)\n  .get('/api/login/viewannouncement')\n  .set('cookie', `jwt=${authTokenEmployee}`)\n  .end((err, res) => {\n    if (err) return done(err); \n    done();\n  });",
              "err": {
                "message": "Error: Auth token is missing.",
                "estack": "Error: Auth token is missing.\n    at Context.<anonymous> (file:///F:/SE7/G17_StaffGrid/testing-documents/unit-test-backend/test/announcement_unit_test.spec.js:58:41)\n    at process.processImmediate (node:internal/timers:476:21)",
                "diff": null
              },
              "uuid": "778737de-4f61-4994-879e-175d96f8cabd",
              "parentUUID": "e6d4b5bd-da91-4db3-8d43-d5c36349bde0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "[Admin] should fetch the last counters for roles",
              "fullTitle": "Announcement API Tests [Admin] should fetch the last counters for roles",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "if (!authTokenAdmin) return done(new Error('Auth token is missing.'));\nrequest.execute(baseUrl)\n  .get('/api/login/alllastcnt')\n  .set('cookie', `jwt=${authTokenAdmin}`)\n  .end((err, res) => {\n    if (err) return done(err); \n    done();\n  });",
              "err": {
                "message": "Error: Auth token is missing.",
                "estack": "Error: Auth token is missing.\n    at Context.<anonymous> (file:///F:/SE7/G17_StaffGrid/testing-documents/unit-test-backend/test/announcement_unit_test.spec.js:70:38)\n    at process.processImmediate (node:internal/timers:476:21)",
                "diff": null
              },
              "uuid": "a5aac5bc-79ba-400d-a8eb-20b2e98f6f56",
              "parentUUID": "e6d4b5bd-da91-4db3-8d43-d5c36349bde0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "[Employee] should view announcements sent by them",
              "fullTitle": "Announcement API Tests [Employee] should view announcements sent by them",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "if (!authTokenEmployee) return done(new Error('Auth token is missing.'));\nrequest.execute(baseUrl)\n  .get('/api/login/viewannouncementsendbyme')\n  .set('cookie', `jwt=${authTokenEmployee}`)\n  .end((err, res) => {\n    if (err) return done(err);\n \n    done();\n  });",
              "err": {
                "message": "Error: Auth token is missing.",
                "estack": "Error: Auth token is missing.\n    at Context.<anonymous> (file:///F:/SE7/G17_StaffGrid/testing-documents/unit-test-backend/test/announcement_unit_test.spec.js:82:41)\n    at process.processImmediate (node:internal/timers:476:21)",
                "diff": null
              },
              "uuid": "7b01772e-57a2-4a1f-9fb2-bb36ea09a076",
              "parentUUID": "e6d4b5bd-da91-4db3-8d43-d5c36349bde0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "[Admin] should fail to post an announcement with missing message",
              "fullTitle": "Announcement API Tests [Admin] should fail to post an announcement with missing message",
              "timedOut": false,
              "duration": 1,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "if (!authTokenAdmin) return done(new Error('Auth token is missing.'));\nconst invalidAnnouncementPayload = {\n  senderID: '2024000001',\n  senderRole: 'admin',\n  receiverIDs: ['2024030001', '2024030002'],\n};\nrequest.execute(baseUrl)\n  .post('/api/login/announcement')\n  .set('cookie', `jwt=${authTokenAdmin}`)\n  .send(invalidAnnouncementPayload)\n  .end((err, res) => { \n    if(res.text=='{\"message\":\"error\"}')\n    {\n        done(res.text)\n    }\n    done();\n  });",
              "err": {
                "message": "Error: Auth token is missing.",
                "estack": "Error: Auth token is missing.\n    at Context.<anonymous> (file:///F:/SE7/G17_StaffGrid/testing-documents/unit-test-backend/test/announcement_unit_test.spec.js:95:38)\n    at process.processImmediate (node:internal/timers:476:21)",
                "diff": null
              },
              "uuid": "9b491d19-ed44-44d8-b890-75da2d48a8a6",
              "parentUUID": "e6d4b5bd-da91-4db3-8d43-d5c36349bde0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "[Employee] should fail to fetch announcements without authentication",
              "fullTitle": "Announcement API Tests [Employee] should fail to fetch announcements without authentication",
              "timedOut": false,
              "duration": 67,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request.execute(baseUrl)\n  .get('/api/login/viewannouncement')\n  .end((err, res) => { \n    done();\n  });",
              "err": {},
              "uuid": "71365077-0d44-4fe1-b864-19fe9b14b81c",
              "parentUUID": "e6d4b5bd-da91-4db3-8d43-d5c36349bde0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "[Admin] should fail to fetch last counters without authentication",
              "fullTitle": "Announcement API Tests [Admin] should fail to fetch last counters without authentication",
              "timedOut": false,
              "duration": 70,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request.execute(baseUrl)\n  .get('/api/login/alllastcnt')\n  .end((err, res) => { \n    done();\n  });",
              "err": {},
              "uuid": "808b9727-b6b9-478f-b560-c5a8c734de4f",
              "parentUUID": "e6d4b5bd-da91-4db3-8d43-d5c36349bde0",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "fcc26fc6-fd1b-420b-b39a-d1191a708cd7",
            "228b1bfc-f543-4d76-b4ef-38cffd70ee3f",
            "71365077-0d44-4fe1-b864-19fe9b14b81c",
            "808b9727-b6b9-478f-b560-c5a8c734de4f"
          ],
          "failures": [
            "778737de-4f61-4994-879e-175d96f8cabd",
            "a5aac5bc-79ba-400d-a8eb-20b2e98f6f56",
            "7b01772e-57a2-4a1f-9fb2-bb36ea09a076",
            "9b491d19-ed44-44d8-b890-75da2d48a8a6"
          ],
          "pending": [],
          "skipped": [],
          "duration": 270,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "191e25f1-a6f3-43a1-af63-116d0b2da83a",
          "title": "Attendance System Tests",
          "fullFile": "F:\\SE7\\G17_StaffGrid\\testing-documents\\unit-test-backend\\test\\attendance_unit_test.spec.js",
          "file": "\\test\\attendance_unit_test.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "[Employee] should login successfully and get auth token",
              "fullTitle": "Attendance System Tests [Employee] should login successfully and get auth token",
              "timedOut": false,
              "duration": 72,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request.execute(baseUrl)\n  .post('/api/login')\n  .send({ id: '2024030001', pass: 'R123456' })\n  .end((err, res) => {\n    if (err) {\n        return done(err);\n    }\n    authTokenEmployee = res.body.token; \n    done();\n  });",
              "err": {},
              "uuid": "7d220e95-2120-4f6f-877b-817754230c45",
              "parentUUID": "191e25f1-a6f3-43a1-af63-116d0b2da83a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "[Attendance] Should return If Attendance Done",
              "fullTitle": "Attendance System Tests [Attendance] Should return If Attendance Done",
              "timedOut": false,
              "duration": 100,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "request.execute(baseUrl)\n  .post('/api/attendance')\n  .set('cookie', `jwt=${authTokenEmployee}`)\n  .send({\n    id: '2024030001',\n    latitude: 23.1902117, \n    longitude: 72.6280792,\n  })\n  .end((err, res) => {\n    // console.log(res)\n    if (res._body.message==\"Your attendance has already been marked.\"){ \n        return done(res._body.message);\n    } \n    done()\n  });",
              "err": {
                "message": "TypeError: Cannot read properties of undefined (reading 'message')",
                "estack": "TypeError: Cannot read properties of undefined (reading 'message')\n    at file:///F:/SE7/G17_StaffGrid/testing-documents/unit-test-backend/test/attendance_unit_test.spec.js:33:23\n    at Request.callback (node_modules\\superagent\\lib\\node\\index.js:837:12)\n    at IncomingMessage.<anonymous> (node_modules\\superagent\\lib\\node\\index.js:1078:18)\n    at IncomingMessage.emit (node:events:526:35)\n    at endReadableNT (node:internal/streams/readable:1359:12)\n    at process.processTicksAndRejections (node:internal/process/task_queues:82:21)",
                "diff": null
              },
              "uuid": "8ccb8d2a-5159-4bf2-98fe-4f112e63e7b8",
              "parentUUID": "191e25f1-a6f3-43a1-af63-116d0b2da83a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "[Attendance] Should fetch attendance records for an employee",
              "fullTitle": "Attendance System Tests [Attendance] Should fetch attendance records for an employee",
              "timedOut": false,
              "duration": 108,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request.execute(baseUrl)\n  .get('/api/attendance/2024030001')\n  .set('cookie', `jwt=${authTokenEmployee}`)\n  .end((err, res) => {\n    if (err)   return done(err);  \n    done();\n  });",
              "err": {},
              "uuid": "8905b669-bd1c-476a-a32a-664c97667d8a",
              "parentUUID": "191e25f1-a6f3-43a1-af63-116d0b2da83a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "[Attendance] Should fetch absent days for an employee",
              "fullTitle": "Attendance System Tests [Attendance] Should fetch absent days for an employee",
              "timedOut": false,
              "duration": 76,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request.execute(baseUrl)\n  .get('/api/attendance/getabs/2024030001')\n  .set('cookie', `jwt=${authTokenEmployee}`)\n  .end((err, res) => {\n    if (err)   return done(err); \n    done();\n  });",
              "err": {},
              "uuid": "ffe9540c-c3f3-4997-b2ab-5dc44cc7a8dc",
              "parentUUID": "191e25f1-a6f3-43a1-af63-116d0b2da83a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "[Attendance] Should return error for invalid employee ID",
              "fullTitle": "Attendance System Tests [Attendance] Should return error for invalid employee ID",
              "timedOut": false,
              "duration": 95,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "request.execute(baseUrl)\n  .post('/api/attendance')\n  .set('cookie', `jwt=${authTokenEmployee}`)\n  .send({\n    id: ' 111',\n    latitude: 23.1902117,\n    longitude: 72.6280792,\n  })\n  .end((err, res) => {\n    // console.log(res)\n    if (res._body.message=='Employee with this ID not found.') {\n        return done(res._body.message); \n    }else{\n        done();\n    }\n    \n \n  });",
              "err": {
                "message": "TypeError: Cannot read properties of undefined (reading 'message')",
                "estack": "TypeError: Cannot read properties of undefined (reading 'message')\n    at file:///F:/SE7/G17_StaffGrid/testing-documents/unit-test-backend/test/attendance_unit_test.spec.js:71:23\n    at Request.callback (node_modules\\superagent\\lib\\node\\index.js:837:12)\n    at IncomingMessage.<anonymous> (node_modules\\superagent\\lib\\node\\index.js:1078:18)\n    at IncomingMessage.emit (node:events:526:35)\n    at endReadableNT (node:internal/streams/readable:1359:12)\n    at process.processTicksAndRejections (node:internal/process/task_queues:82:21)",
                "diff": null
              },
              "uuid": "20690155-bf08-4e81-90c6-80ba13afdc94",
              "parentUUID": "191e25f1-a6f3-43a1-af63-116d0b2da83a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7d220e95-2120-4f6f-877b-817754230c45",
            "8905b669-bd1c-476a-a32a-664c97667d8a",
            "ffe9540c-c3f3-4997-b2ab-5dc44cc7a8dc"
          ],
          "failures": [
            "8ccb8d2a-5159-4bf2-98fe-4f112e63e7b8",
            "20690155-bf08-4e81-90c6-80ba13afdc94"
          ],
          "pending": [],
          "skipped": [],
          "duration": 451,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "98f64103-4c81-45ef-974d-ec62bd894b73",
          "title": "Auth Tests",
          "fullFile": "F:\\SE7\\G17_StaffGrid\\testing-documents\\unit-test-backend\\test\\auth_unit_test.spec.js",
          "file": "\\test\\auth_unit_test.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "[Admin] should login successfully and get auth token",
              "fullTitle": "Auth Tests [Admin] should login successfully and get auth token",
              "timedOut": false,
              "duration": 77,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request.execute(baseUrl)\n  .post('/api/login')\n  .send({ id: '2024000001', pass: 'R123456' })\n  .end((err, res) => {\n    if (err) {\n      return done(err);\n    }\n    authTokenAdmin = res.body.token;\n    done();\n  });",
              "err": {},
              "uuid": "c68d4f70-4f5d-40a7-b8d1-159448c8cdb7",
              "parentUUID": "98f64103-4c81-45ef-974d-ec62bd894b73",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "[Manager] should login successfully and get auth token",
              "fullTitle": "Auth Tests [Manager] should login successfully and get auth token",
              "timedOut": false,
              "duration": 103,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request.execute(baseUrl)\n  .post('/api/login')\n  .send({ id: '2024030001', pass: 'R123456' })\n  .end((err, res) => {\n    if (err) {\n      return done(err);\n    }\n    authTokenManager = res.body.token;\n    done();\n  });",
              "err": {},
              "uuid": "34907d14-b421-40a2-a3a4-c1a24b5a8409",
              "parentUUID": "98f64103-4c81-45ef-974d-ec62bd894b73",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "[HR] should login successfully and get auth token",
              "fullTitle": "Auth Tests [HR] should login successfully and get auth token",
              "timedOut": false,
              "duration": 60,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request.execute(baseUrl)\n  .post('/api/login')\n  .send({ id: '2024010001', pass: 'LDypMCQu' })\n  .end((err, res) => {\n    if (err) {\n      return done(err);\n    }\n    authTokenHr = res.body.token;\n    done();\n  });",
              "err": {},
              "uuid": "d1ccb58f-376f-483f-b9f8-9bad5cd7cda0",
              "parentUUID": "98f64103-4c81-45ef-974d-ec62bd894b73",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "[Employee] should login successfully and get auth token",
              "fullTitle": "Auth Tests [Employee] should login successfully and get auth token",
              "timedOut": false,
              "duration": 91,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request.execute(baseUrl)\n  .post('/api/login')\n  .send({ id: '2024030001', pass: 'R123456' })  \n  .end((err, res) => {\n    if (err) {\n      return done(err);\n    }\n    authTokenEmployee = res.body.token;\n    done();\n  });",
              "err": {},
              "uuid": "dfd1fe9f-9541-4ebb-b3f5-6e62f3c5deb1",
              "parentUUID": "98f64103-4c81-45ef-974d-ec62bd894b73",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "[Admin] should successfully logout with valid token",
              "fullTitle": "Auth Tests [Admin] should successfully logout with valid token",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "if (!authTokenAdmin) {\n  return done(new Error('Auth token is missing. Login test may have failed.'));\n}\nrequest.execute(baseUrl)\n  .get('/api/logout')\n  .set('cookie', `jwt=${authTokenAdmin}`)\n  .end((err, res) => {\n    if (err) {\n      return done(err);\n    }\n    done();\n  });",
              "err": {
                "message": "Error: Auth token is missing. Login test may have failed.",
                "estack": "Error: Auth token is missing. Login test may have failed.\n    at Context.<anonymous> (file:///F:/SE7/G17_StaffGrid/testing-documents/unit-test-backend/test/auth_unit_test.spec.js:92:19)\n    at process.processImmediate (node:internal/timers:476:21)",
                "diff": null
              },
              "uuid": "63eecbac-f61d-4aa2-8f31-e8c24b51d310",
              "parentUUID": "98f64103-4c81-45ef-974d-ec62bd894b73",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "[Manager] should successfully logout with valid token",
              "fullTitle": "Auth Tests [Manager] should successfully logout with valid token",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "if (!authTokenManager) {\n  return done(new Error('Auth token is missing. Login test may have failed.'));\n}\nrequest.execute(baseUrl)\n  .get('/api/logout')\n  .set('cookie', `jwt=${authTokenManager}`)\n  .end((err, res) => {\n    if (err) {\n      return done(err);\n    }\n    done();\n  });",
              "err": {
                "message": "Error: Auth token is missing. Login test may have failed.",
                "estack": "Error: Auth token is missing. Login test may have failed.\n    at Context.<anonymous> (file:///F:/SE7/G17_StaffGrid/testing-documents/unit-test-backend/test/auth_unit_test.spec.js:109:19)\n    at process.processImmediate (node:internal/timers:476:21)",
                "diff": null
              },
              "uuid": "60dfd6f9-ffa0-4fbe-9c15-02e56664629c",
              "parentUUID": "98f64103-4c81-45ef-974d-ec62bd894b73",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "[HR] should successfully logout with valid token",
              "fullTitle": "Auth Tests [HR] should successfully logout with valid token",
              "timedOut": false,
              "duration": 1,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "if (!authTokenHr) {\n  return done(new Error('Auth token is missing. Login test may have failed.'));\n}\nrequest.execute(baseUrl)\n  .get('/api/logout')\n  .set('cookie', `jwt=${authTokenHr}`)\n  .end((err, res) => {\n    if (err) {\n      return done(err);\n    }\n    done();\n  });",
              "err": {
                "message": "Error: Auth token is missing. Login test may have failed.",
                "estack": "Error: Auth token is missing. Login test may have failed.\n    at Context.<anonymous> (file:///F:/SE7/G17_StaffGrid/testing-documents/unit-test-backend/test/auth_unit_test.spec.js:126:19)\n    at process.processImmediate (node:internal/timers:476:21)",
                "diff": null
              },
              "uuid": "4c0cdc8e-8bce-41fe-9d9c-04baa322fb69",
              "parentUUID": "98f64103-4c81-45ef-974d-ec62bd894b73",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "[Employee] should successfully logout with valid token",
              "fullTitle": "Auth Tests [Employee] should successfully logout with valid token",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "if (!authTokenEmployee) {\n  return done(new Error('Auth token is missing. Login test may have failed.'));\n}\n// console.log(authTokenEmployee)\nrequest.execute(baseUrl)\n  .get('/api/logout')\n  .set('cookie', `jwt=${authTokenEmployee}`)\n  .end((err, res) => {\n    if (err) {\n      return done(err);\n    }\n    done();\n  });",
              "err": {
                "message": "Error: Auth token is missing. Login test may have failed.",
                "estack": "Error: Auth token is missing. Login test may have failed.\n    at Context.<anonymous> (file:///F:/SE7/G17_StaffGrid/testing-documents/unit-test-backend/test/auth_unit_test.spec.js:143:19)\n    at process.processImmediate (node:internal/timers:476:21)",
                "diff": null
              },
              "uuid": "69263e58-5da9-4d20-b5c3-48ed76ca2ca9",
              "parentUUID": "98f64103-4c81-45ef-974d-ec62bd894b73",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "[Admin] should fail to register an employee with invalid email",
              "fullTitle": "Auth Tests [Admin] should fail to register an employee with invalid email",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "if (!authTokenAdmin) {\n  return done(new Error('Auth token is missing. Login test may have failed.'));\n}\nrequest.execute(baseUrl)\n  .post('/api/register')\n  .set('cookie', `jwt=${authTokenAdmin}`)\n  .send({\n    name: 'Rama',\n    mail: 'Xm1@gmail.com',   \n    role: 'employee',\n  })\n  .end((err, res) => {\n    if (err) {\n      return done(err);\n    }\n \n    if (res.body.error) {\n      done();  \n    } else {\n      done(new Error('Expected error due to invalid email.'));\n    }\n  });",
              "err": {
                "message": "Error: Auth token is missing. Login test may have failed.",
                "estack": "Error: Auth token is missing. Login test may have failed.\n    at Context.<anonymous> (file:///F:/SE7/G17_StaffGrid/testing-documents/unit-test-backend/test/auth_unit_test.spec.js:162:19)\n    at process.processImmediate (node:internal/timers:476:21)",
                "diff": null
              },
              "uuid": "8202c679-c409-424b-a010-77f349b09b5e",
              "parentUUID": "98f64103-4c81-45ef-974d-ec62bd894b73",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c68d4f70-4f5d-40a7-b8d1-159448c8cdb7",
            "34907d14-b421-40a2-a3a4-c1a24b5a8409",
            "d1ccb58f-376f-483f-b9f8-9bad5cd7cda0",
            "dfd1fe9f-9541-4ebb-b3f5-6e62f3c5deb1"
          ],
          "failures": [
            "63eecbac-f61d-4aa2-8f31-e8c24b51d310",
            "60dfd6f9-ffa0-4fbe-9c15-02e56664629c",
            "4c0cdc8e-8bce-41fe-9d9c-04baa322fb69",
            "69263e58-5da9-4d20-b5c3-48ed76ca2ca9",
            "8202c679-c409-424b-a010-77f349b09b5e"
          ],
          "pending": [],
          "skipped": [],
          "duration": 332,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "b65d4d3b-3f4a-491f-9e0f-d4396a366f4c",
          "title": "Leave Management System Tests",
          "fullFile": "F:\\SE7\\G17_StaffGrid\\testing-documents\\unit-test-backend\\test\\leave_unit_test.spec.js",
          "file": "\\test\\leave_unit_test.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "[Employee] should login successfully and get auth token",
              "fullTitle": "Leave Management System Tests [Employee] should login successfully and get auth token",
              "timedOut": false,
              "duration": 116,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request.execute(baseUrl)\n  .post('/api/login')\n  .send({ id: '2024030001', pass: 'R123456' })\n  .end((err, res) => {\n    if (err) return done(err);\n    \n    authTokenEmployee = res.body.token; \n    // console.log(\"------Emp-------------------\") \n    // console.log(res)\n    // console.log(\"------Emp-------------------\") \n    done();\n  });",
              "err": {},
              "uuid": "eb9862dc-9a1e-4e62-a51d-7e671037cffd",
              "parentUUID": "b65d4d3b-3f4a-491f-9e0f-d4396a366f4c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "[Admin] should login successfully and get auth token",
              "fullTitle": "Leave Management System Tests [Admin] should login successfully and get auth token",
              "timedOut": false,
              "duration": 106,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request.execute(baseUrl)\n  .post('/api/login')\n  .send({ id: '2024000001', pass: 'R123456' })\n  .end((err, res) => {\n    if (err) return done(err);\n    \n    authTokenAdmin = res.body.token;  \n    // console.log(authTokenAdmin)\n    done();\n  });",
              "err": {},
              "uuid": "89994e3a-7019-45a7-a9b7-0c8161d7c8f5",
              "parentUUID": "b65d4d3b-3f4a-491f-9e0f-d4396a366f4c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "[Leave] Should apply for a leave successfully",
              "fullTitle": "Leave Management System Tests [Leave] Should apply for a leave successfully",
              "timedOut": false,
              "duration": 64,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request.execute(baseUrl)\n  .post('/api/leave/apply')\n  .set('cookie', `jwt=${authTokenEmployee}`)\n  .send({ \n    senderId: '2024030001',\n    leaveType: 'Sick Leave',\n    fromDate: '2024-12-01',\n    toDate: '2024-12-05',\n    totalDays: 5,\n  })\n  .end((err, res) => {\n    if (err) return done(err); \n    done();\n  });",
              "err": {},
              "uuid": "c2f5ffc8-4169-49d2-8707-b044de6573c8",
              "parentUUID": "b65d4d3b-3f4a-491f-9e0f-d4396a366f4c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "[Leave] Should fetch all leaves",
              "fullTitle": "Leave Management System Tests [Leave] Should fetch all leaves",
              "timedOut": false,
              "duration": 71,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request.execute(baseUrl)\n  .get('/api/leave/getallleavedetails')\n  .set('cookie', `jwt=${authTokenAdmin}`)\n  .end((err, res) => {\n    if (err) return done(err); \n    done();\n  });",
              "err": {},
              "uuid": "3ba35c10-7552-4875-8ef2-a8dcb086ddbd",
              "parentUUID": "b65d4d3b-3f4a-491f-9e0f-d4396a366f4c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "[Leave] Should fetch sent leaves for a specific sender",
              "fullTitle": "Leave Management System Tests [Leave] Should fetch sent leaves for a specific sender",
              "timedOut": false,
              "duration": 45,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request.execute(baseUrl)\n  .get('/api/leave/getsentleaves/2024030001')\n  .set('cookie', `jwt=${authTokenEmployee}`)\n  .end((err, res) => {\n    if (err) return done(err); \n    done();\n  });",
              "err": {},
              "uuid": "f29820c5-935d-480c-9a39-89d7f87a3f1c",
              "parentUUID": "b65d4d3b-3f4a-491f-9e0f-d4396a366f4c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "[Leave] Should update a leave record",
              "fullTitle": "Leave Management System Tests [Leave] Should update a leave record",
              "timedOut": false,
              "duration": 69,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request.execute(baseUrl)\n  .patch('/api/leave/update/L16')\n  .set('cookie', `jwt=${authTokenAdmin}`)\n  .send({ leaveStatus: 'Approved' })\n  .end((err, res) => {\n    if (err) return done(err); \n    // console.log(res)\n    if (res._body.message==\"Leave not found\"){ \n        return done(res._body.message);\n    }  \n    done();\n  });",
              "err": {},
              "uuid": "b52f370d-b348-4bdd-ab7b-f35ea7481449",
              "parentUUID": "b65d4d3b-3f4a-491f-9e0f-d4396a366f4c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "[Leave] Should delete a leave record",
              "fullTitle": "Leave Management System Tests [Leave] Should delete a leave record",
              "timedOut": false,
              "duration": 42,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "request.execute(baseUrl)\n  .delete('/api/leave/delete/L15')\n  .set('cookie', `jwt=${authTokenEmployee}`)\n  .end((err, res) => {\n    if (err) return done(err);\n    // console.log(res)\n    if (res._body.error ==\"Leave record not found.\"){ \n        return done(res._body.error);\n    }  \n    done();\n  });",
              "err": {
                "message": "Error: done() invoked with non-Error: Leave record not found.",
                "estack": "Error: done() invoked with non-Error: Leave record not found.\n    at file:///F:/SE7/G17_StaffGrid/testing-documents/unit-test-backend/test/leave_unit_test.spec.js:100:20\n    at Request.callback (node_modules\\superagent\\lib\\node\\index.js:837:12)\n    at F:\\SE7\\G17_StaffGrid\\testing-documents\\unit-test-backend\\node_modules\\superagent\\lib\\node\\index.js:1078:18\n    at IncomingMessage.<anonymous> (node_modules\\superagent\\lib\\node\\parsers\\json.js:21:7)\n    at IncomingMessage.emit (node:events:526:35)\n    at endReadableNT (node:internal/streams/readable:1359:12)\n    at process.processTicksAndRejections (node:internal/process/task_queues:82:21)",
                "diff": null
              },
              "uuid": "8731a58f-94f1-4eca-9184-62222c4ee7f1",
              "parentUUID": "b65d4d3b-3f4a-491f-9e0f-d4396a366f4c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "[Leave] Should fetch approved leave dates",
              "fullTitle": "Leave Management System Tests [Leave] Should fetch approved leave dates",
              "timedOut": false,
              "duration": 39,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request.execute(baseUrl)\n  .get('/api/leave/listget/2024030001')\n  .set('cookie', `jwt=${authTokenEmployee}`)\n  .end((err, res) => {\n    // console.log(res)\n    if (err) return done(err); \n    done();\n  });",
              "err": {},
              "uuid": "b18085eb-8ce0-4db7-88df-bcffb456e994",
              "parentUUID": "b65d4d3b-3f4a-491f-9e0f-d4396a366f4c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "[Leave] Should return error for applying leave without mandatory details",
              "fullTitle": "Leave Management System Tests [Leave] Should return error for applying leave without mandatory details",
              "timedOut": false,
              "duration": 43,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "request.execute(baseUrl)\n  .post('/api/leave/apply')\n  .set('cookie', `jwt=${authTokenEmployee}`)\n  .send({\n    senderId: '2024030001',\n    leaveType: 'Other Reason',\n  })\n  .end((err, res) => {\n    if (err) return done(err); \n    if (res._body.message ==\"Please provide additional details for 'Other' leave type.\"){ \n        return done(res._body.message);\n    }  \n    done();\n  });",
              "err": {
                "message": "Error: done() invoked with non-Error: Please provide additional details for 'Other' leave type.",
                "estack": "Error: done() invoked with non-Error: Please provide additional details for 'Other' leave type.\n    at file:///F:/SE7/G17_StaffGrid/testing-documents/unit-test-backend/test/leave_unit_test.spec.js:128:20\n    at Request.callback (node_modules\\superagent\\lib\\node\\index.js:837:12)\n    at F:\\SE7\\G17_StaffGrid\\testing-documents\\unit-test-backend\\node_modules\\superagent\\lib\\node\\index.js:1078:18\n    at IncomingMessage.<anonymous> (node_modules\\superagent\\lib\\node\\parsers\\json.js:21:7)\n    at IncomingMessage.emit (node:events:526:35)\n    at endReadableNT (node:internal/streams/readable:1359:12)\n    at process.processTicksAndRejections (node:internal/process/task_queues:82:21)",
                "diff": null
              },
              "uuid": "2042cfe7-032c-414c-b211-d3e8294139ce",
              "parentUUID": "b65d4d3b-3f4a-491f-9e0f-d4396a366f4c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "eb9862dc-9a1e-4e62-a51d-7e671037cffd",
            "89994e3a-7019-45a7-a9b7-0c8161d7c8f5",
            "c2f5ffc8-4169-49d2-8707-b044de6573c8",
            "3ba35c10-7552-4875-8ef2-a8dcb086ddbd",
            "f29820c5-935d-480c-9a39-89d7f87a3f1c",
            "b52f370d-b348-4bdd-ab7b-f35ea7481449",
            "b18085eb-8ce0-4db7-88df-bcffb456e994"
          ],
          "failures": [
            "8731a58f-94f1-4eca-9184-62222c4ee7f1",
            "2042cfe7-032c-414c-b211-d3e8294139ce"
          ],
          "pending": [],
          "skipped": [],
          "duration": 595,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "6b07e89d-6ef7-41f0-b5d1-25389ecb476c",
          "title": "Profile Management Tests",
          "fullFile": "F:\\SE7\\G17_StaffGrid\\testing-documents\\unit-test-backend\\test\\profile_unit_test.spec.js",
          "file": "\\test\\profile_unit_test.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "[Employee] should login successfully and get auth token",
              "fullTitle": "Profile Management Tests [Employee] should login successfully and get auth token",
              "timedOut": false,
              "duration": 117,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request.execute(baseUrl)\n  .post('/api/login')\n  .send({ id: '2024030003', pass: 't8n@ehXq' })\n  .end((err, res) => {\n    if (err) return done(err);\n    authTokenEmployee = res.body.token; \n    // console.log(authTokenEmployee) \n    done();\n  });",
              "err": {},
              "uuid": "f0b4d97b-5a68-465e-bd1b-0381d8795d08",
              "parentUUID": "6b07e89d-6ef7-41f0-b5d1-25389ecb476c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "[Profile] Should save user profile successfully",
              "fullTitle": "Profile Management Tests [Profile] Should save user profile successfully",
              "timedOut": false,
              "duration": 29,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request.execute(baseUrl)\n  .post('/profile/api/add-detailprofile/2024030003')\n  .set('cookie', `jwt=${authTokenEmployee}`)\n  .send({   \n    firstName: 'Riddhi',\n    lastName: 'Mistry',\n    fatherName: 'Miteshbhai',\n    motherName: 'Neeta ben',\n    birthDate: '1990-01-01', \n    phoneNumber: '1234567890',\n    gender: 'male',\n    nationality: 'Indian',\n    religion: 'Hindu',\n    block: 'A',\n    street: 'Street 1',\n    village: 'Village A',\n    taluka: 'Taluka A',\n    district: 'District A',\n    pincode: '123456',\n    country: 'India',\n    bankName: 'Bank A',\n    ifscCode: 'BANK1234',\n    accountNo: '123456789012',\n    aadharNumber: '123456789012',\n  })\n  .end((err, res) => {\n    //console.log(res)\n    done();\n  });",
              "err": {},
              "uuid": "1e836fa7-e726-4f51-a550-020a2f619c91",
              "parentUUID": "6b07e89d-6ef7-41f0-b5d1-25389ecb476c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "[Profile] Should retrieve user profile by ID",
              "fullTitle": "Profile Management Tests [Profile] Should retrieve user profile by ID",
              "timedOut": false,
              "duration": 38,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request.execute(baseUrl)\n  .get('/profile/api/getEmpfulldetailbyid/2024030003')\n  .set('cookie', `jwt=${authTokenEmployee}`)\n  .end((err, res) => {\n    // console.log(res);\n    done();\n  });",
              "err": {},
              "uuid": "67678928-195b-4d06-8614-fbaf13c4e243",
              "parentUUID": "6b07e89d-6ef7-41f0-b5d1-25389ecb476c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "[Profile] Should return error for non-existing profile on detailed check",
              "fullTitle": "Profile Management Tests [Profile] Should return error for non-existing profile on detailed check",
              "timedOut": false,
              "duration": 48,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request.execute(baseUrl)\n  .get('/profile/api/checkfillornot/2024030003')\n  .set('cookie', `jwt=${authTokenEmployee}`)\n  .end((err, res) => { \n    done();\n  });",
              "err": {},
              "uuid": "96229ae5-2fa2-4e9a-b997-d6956a6c452e",
              "parentUUID": "6b07e89d-6ef7-41f0-b5d1-25389ecb476c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f0b4d97b-5a68-465e-bd1b-0381d8795d08",
            "1e836fa7-e726-4f51-a550-020a2f619c91",
            "67678928-195b-4d06-8614-fbaf13c4e243",
            "96229ae5-2fa2-4e9a-b997-d6956a6c452e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 232,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "aef129ce-46ac-4f7d-929e-7783c76f80d2",
          "title": "Project Management Tests",
          "fullFile": "F:\\SE7\\G17_StaffGrid\\testing-documents\\unit-test-backend\\test\\project_unit_test.spec.js",
          "file": "\\test\\project_unit_test.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "[Admin] should login and get auth token",
              "fullTitle": "Project Management Tests [Admin] should login and get auth token",
              "timedOut": false,
              "duration": 110,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request.execute(baseUrl)\n  .post('/api/login')\n  .send({ id: '2024000001', pass: 'R123456' })\n  .end((err, res) => {\n    if (err) return done(err);\n    authTokenAdmin = res.body.token;\n    // console.log(authTokenAdmin)\n    done();\n  });",
              "err": {},
              "uuid": "4757efeb-a677-4ff6-899f-bcd871bd2145",
              "parentUUID": "aef129ce-46ac-4f7d-929e-7783c76f80d2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "[Manager] should login and get auth token",
              "fullTitle": "Project Management Tests [Manager] should login and get auth token",
              "timedOut": false,
              "duration": 21,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request.execute(baseUrl)\n  .post('/api/login')\n  .send({ id: '2024020001', pass: 'R123456' })\n  .end((err, res) => {\n    if (err) return done(err);\n    authTokenManager = res.body.token;\n    // console.log(authTokenManager)\n    done();\n  });",
              "err": {},
              "uuid": "21432ed0-c10b-4907-b524-37ea808dd6e1",
              "parentUUID": "aef129ce-46ac-4f7d-929e-7783c76f80d2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "[Employee] should login and get auth token",
              "fullTitle": "Project Management Tests [Employee] should login and get auth token",
              "timedOut": false,
              "duration": 114,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request.execute(baseUrl)\n  .post('/api/login')\n  .send({ id: '2024030001', pass: 'R123456' })\n  .end((err, res) => {\n    if (err) return done(err);\n    authTokenEmployee = res.body.token;\n    // console.log(authTokenEmployee)\n    done();\n  });",
              "err": {},
              "uuid": "ad49582b-95c8-4732-b4e4-5530cb093d8a",
              "parentUUID": "aef129ce-46ac-4f7d-929e-7783c76f80d2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "[Admin] should successfully upload a project",
              "fullTitle": "Project Management Tests [Admin] should successfully upload a project",
              "timedOut": false,
              "duration": 64,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "if (!authTokenAdmin) return done(new Error('Admin token is missing.'));\n\nconst projectData = {\n  title: 'NewProject',\n  description: 'NEW---Project------:>', \n  teamMembers: [{ id: '2024030001'}],\n  status: 'Active',\n  tasks: [\n    { taskTitle: 'Task 1', taskDescription: 'Description for Task 1', assignedTo: { id: '2024030001' }, dueDate: '2024-12-01', status: 'Incomplete' },\n  ],\n  startDate: '2024-11-30',\n  endDate: '2024-12-30'\n};\nrequest.execute(baseUrl)\n  .post('/api/project/upload')\n  .set('cookie', `jwt=${authTokenAdmin}`)\n  .send(projectData)\n  .end((err, res) => {\n    if (err) return done(err); \n    done();\n  });",
              "err": {},
              "uuid": "616ba2d5-f61d-403b-a122-8c19cd8040cb",
              "parentUUID": "aef129ce-46ac-4f7d-929e-7783c76f80d2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "[Manager] should retrieve all projects for manager",
              "fullTitle": "Project Management Tests [Manager] should retrieve all projects for manager",
              "timedOut": false,
              "duration": 1,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "if (!authTokenManager) return done(new Error('Manager token is missing.'));\n\nrequest.execute(baseUrl)\n  .get(`/api/project/2024020001`)   \n  .set('cookie', `jwt=${authTokenManager}`)\n  .end((err, res) => {\n    if (err) return done(err); \n    done();\n  });",
              "err": {
                "message": "Error: Manager token is missing.",
                "estack": "Error: Manager token is missing.\n    at Context.<anonymous> (file:///F:/SE7/G17_StaffGrid/testing-documents/unit-test-backend/test/project_unit_test.spec.js:75:40)\n    at process.processImmediate (node:internal/timers:476:21)",
                "diff": null
              },
              "uuid": "617d10ee-19b9-4257-9343-4c064e6fda28",
              "parentUUID": "aef129ce-46ac-4f7d-929e-7783c76f80d2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "[Admin] should retrieve a specific project by ID",
              "fullTitle": "Project Management Tests [Admin] should retrieve a specific project by ID",
              "timedOut": false,
              "duration": 71,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "if (!authTokenAdmin) return done(new Error('Admin token is missing.'));\n\nrequest.execute(baseUrl)\n  .get('/api/project/p1')   \n  .set('cookie', `jwt=${authTokenAdmin}`)\n  .end((err, res) => {\n    if (err) return done(err); \n    done();\n  });",
              "err": {},
              "uuid": "4c5445e5-44e7-4520-9475-b12b69bce8dc",
              "parentUUID": "aef129ce-46ac-4f7d-929e-7783c76f80d2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "[Admin] should successfully update a project",
              "fullTitle": "Project Management Tests [Admin] should successfully update a project",
              "timedOut": false,
              "duration": 61,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "if (!authTokenAdmin) return done(new Error('Admin token is missing.'));\n\nconst updateData = {\n  title: 'Updated Project Title',\n  description: 'Updated Project Description'\n};\nrequest.execute(baseUrl)\n  .patch('/api/project/p1')   \n  .set('cookie', `jwt=${authTokenAdmin}`)\n  .send(updateData)\n  .end((err, res) => {\n    if (err) return done(err); \n    done();\n  });",
              "err": {},
              "uuid": "b9674684-a0c0-4bcb-93fd-2878f834a4c7",
              "parentUUID": "aef129ce-46ac-4f7d-929e-7783c76f80d2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "[Admin] should successfully delete a project",
              "fullTitle": "Project Management Tests [Admin] should successfully delete a project",
              "timedOut": false,
              "duration": 60,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "if (!authTokenAdmin) return done(new Error('Admin token is missing.'));\n\nrequest.execute(baseUrl)\n  .delete('/api/project/p1')   \n  .set('cookie', `jwt=${authTokenAdmin}`)\n  .end((err, res) => {\n    if (err) return done(err); \n    done();\n  });",
              "err": {},
              "uuid": "dcb92ca0-5e31-4220-821f-297458ad8e99",
              "parentUUID": "aef129ce-46ac-4f7d-929e-7783c76f80d2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "[Employee] should retrieve projects assigned to them",
              "fullTitle": "Project Management Tests [Employee] should retrieve projects assigned to them",
              "timedOut": false,
              "duration": 43,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "if (!authTokenEmployee) return done(new Error('Employee token is missing.'));\n\nrequest.execute(baseUrl)\n  .get(`/api/project/employee/2024030001`)   \n  .set('cookie', `jwt=${authTokenAdmin}`)\n  .end((err, res) => {\n    if (err) return done(err); \n    done();\n  });",
              "err": {},
              "uuid": "b42c5088-3d08-4ffb-8a4e-1e9a814c7c62",
              "parentUUID": "aef129ce-46ac-4f7d-929e-7783c76f80d2",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4757efeb-a677-4ff6-899f-bcd871bd2145",
            "21432ed0-c10b-4907-b524-37ea808dd6e1",
            "ad49582b-95c8-4732-b4e4-5530cb093d8a",
            "616ba2d5-f61d-403b-a122-8c19cd8040cb",
            "4c5445e5-44e7-4520-9475-b12b69bce8dc",
            "b9674684-a0c0-4bcb-93fd-2878f834a4c7",
            "dcb92ca0-5e31-4220-821f-297458ad8e99",
            "b42c5088-3d08-4ffb-8a4e-1e9a814c7c62"
          ],
          "failures": [
            "617d10ee-19b9-4257-9343-4c064e6fda28"
          ],
          "pending": [],
          "skipped": [],
          "duration": 545,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.8.2"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}